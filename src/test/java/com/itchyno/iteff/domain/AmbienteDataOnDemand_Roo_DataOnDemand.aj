// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.itchyno.iteff.domain;

import com.itchyno.iteff.domain.Ambiente;
import com.itchyno.iteff.domain.AmbienteDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect AmbienteDataOnDemand_Roo_DataOnDemand {
    
    declare @type: AmbienteDataOnDemand: @Component;
    
    private Random AmbienteDataOnDemand.rnd = new SecureRandom();
    
    private List<Ambiente> AmbienteDataOnDemand.data;
    
    public Ambiente AmbienteDataOnDemand.getNewTransientAmbiente(int index) {
        Ambiente obj = new Ambiente();
        setCodigo(obj, index);
        setDescricao(obj, index);
        setIndAtivo(obj, index);
        return obj;
    }
    
    public void AmbienteDataOnDemand.setCodigo(Ambiente obj, int index) {
        String codigo = "c_" + index;
        if (codigo.length() > 3) {
            codigo = codigo.substring(0, 3);
        }
        obj.setCodigo(codigo);
    }
    
    public void AmbienteDataOnDemand.setDescricao(Ambiente obj, int index) {
        String descricao = "descricao_" + index;
        if (descricao.length() > 255) {
            descricao = descricao.substring(0, 255);
        }
        obj.setDescricao(descricao);
    }
    
    public void AmbienteDataOnDemand.setIndAtivo(Ambiente obj, int index) {
        Boolean indAtivo = Boolean.TRUE;
        obj.setIndAtivo(indAtivo);
    }
    
    public Ambiente AmbienteDataOnDemand.getSpecificAmbiente(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Ambiente obj = data.get(index);
        Long id = obj.getId();
        return Ambiente.findAmbiente(id);
    }
    
    public Ambiente AmbienteDataOnDemand.getRandomAmbiente() {
        init();
        Ambiente obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Ambiente.findAmbiente(id);
    }
    
    public boolean AmbienteDataOnDemand.modifyAmbiente(Ambiente obj) {
        return false;
    }
    
    public void AmbienteDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Ambiente.findAmbienteEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Ambiente' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Ambiente>();
        for (int i = 0; i < 10; i++) {
            Ambiente obj = getNewTransientAmbiente(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
